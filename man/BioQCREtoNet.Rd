% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProcessData.R
\name{BioQCREtoNet}
\alias{BioQCREtoNet}
\title{Compute the Quaternary Dot Product Scoring Statistic for a biological causal network.}
\usage{
BioQCREtoNet(relations, evidence, entities, method = "Quaternary", 
                    fc.thresh = log2(1.3), is.Logfc = TRUE, pval.thresh = 0.05)
}
\arguments{
\item{relations}{A data frame containing pairs of connected entities in a causal network (e.g Protein-Protein interactions),
and the type of causal relation between them. The data frame must have three columns with column names: \emph{srcuid}, 
\emph{trguid} and \emph{mode} respective of order. \emph{srcuid} stands for source entity, \emph{trguid} stands for 
target entity and \emph{mode} stands for the type of relation between \emph{srcuid} and \emph{trguid}. The relation 
has to be one of \emph{increases}, \emph{decreases} or \emph{regulates}. All three columns must be of type character.}

\item{evidence}{A data frame of entities which are target nodes in the causal network and have new 
experimental values (e.g gene expression data). The \emph{evidence} data frame must have three columns \emph{entrez}, 
\emph{fc} and \emph{pvalue}. \emph{entrez} denotes the entrez id of a given gene, \emph{fc} denotes
the fold change of a gene, and \emph{pvalue} denotes the p-value. The \emph{entrez} column must be of type
character, and the \emph{fc} and \emph{pvalue} columns must be numeric values.}

\item{entities}{A data frame of mappings for all entities present in data frame \emph{relations}. \emph{entities} must contain
four columns: \emph{uid}, \emph{id}, \emph{symbol} and \emph{type} respective of order. All four columns must
be of type character. \emph{uid} includes every source and target node in the network (i.e \emph{relations}),
\emph{id} is the id of \emph{uid} (e.g entrez id of an mRNA), \emph{symbol} is the symbol of \emph{id} and \emph{type} 
is the type of entity of \emph{id} which can be one of mRNA, protein, drug or compound. All target nodes must be of type
mRNA.}

\item{method}{Choose one of \emph{Quaternary}, \emph{Ternary} or \emph{Enrichment}. Default is \emph{Quaternary}.}

\item{fc.thresh}{Threshold for fold change in \emph{evidence} data frame. Any row in evidence with abosolute value \emph{fc}
smaller than \emph{fc.thresh} will be ignored. Default value is log2(1.3). If
\emph{is.Logfc = FALSE} then \emph{fc} column in \emph{evidence} is converted to log scale.}

\item{is.Logfc}{Boolean value to indicate if the fold change is in log scale. Default value is TRUE.}

\item{pval.thresh}{Threshold for p-values in \emph{evidence} data frame. All rows in \emph{evidence} with p-values 
greater than \emph{pval.thresh} will be ingnored. Default value is 0.05.}
}
\value{
This function returns a data frame containing parameters concerning the Quaternary Dot Product
        Scoring Statistic. The p-values of each of the source nodes is also computed, and the data frame
        is in increasing order of p-values of the goodness of fit score for the given source nodes. The column
        names of the data frame are:
        
\itemize{        
\item  \emph{uid} The source node in the network.
\item \emph{name} symbols of the source nodes. 
\item \emph{regulation} Direction of change of source node.
\item \emph{correct.pred} Number of correct predictions in \emph{evidence} when compared to predictions made
                    by the network.
\item \emph{incorrect.pred} Number of incorrect predictions in \emph{evidence} when compared to predictions made
                    by the network.
\item \emph{score} The number of correct predictions minus the number of incorrect predictions. 
\item \emph{total.reachable} Total number of \emph{trguid}s connected to a \emph{srcuid}.
\item \emph{significant.reachable} number of \emph{trguid}s connected to a \emph{srcuid} that are also regulated 
                                   in \emph{evidence}.
\item \emph{total.ambiguous} Total number of children of a given \emph{srcuid} with relation type \emph{regulates} or children
                             which share both \emph{increase} and \emph{decrease} relation with \emph{srcuid}.
\item \emph{significant.ambiguous} Total number of similar type of relations as with \emph{total.ambiguous} but 
                                   with the restriction that the children are regulated in \emph{evidence}.  
\item \emph{unknown} Numnber of \emph{trguid}s which do not interact with the given \emph{srcuid}.
\item \emph{pvalue} P-value of the score.
}
}
\description{
This function computes the Quaternary Dot Product Scoring Statistic for all source nodes in a  
             causal network once new gene expression data is presented. This is a Causal Relation Engine (CRE) 
             on the levels of a causal network of predictions and a new set of realizations that
             arise in real world situations.
}
\examples{
# We provide an example of one possible way to parse the Stringdb 
# Homo Sapien protein actions network and prepare 
# it to be used with our package. First, we need to 
# upload the network which is attached to QuaternaryProd
# for convenience.
 
library(readr)
library(org.Hs.eg.db)
library(dplyr)
library(stringr)
library(fdrtool)
        
# Get the full file name containing the STRINGdb relations
ff <- system.file("extdata", "9606.protein.actions.v10.txt.gz"
                                           , package="QuaternaryProd") 
all_rels <- read_tsv(gzfile(ff), col_names = TRUE)
          
          
# Next, we filter out the important columns and important 
# relations. We remove all rows which do not have a relation
# activation, inhibition and expression. Moreover, we
# also consider reverse causality for any relation which has
# a direction value equal to 0.
          
# Set new names for columns
names(all_rels) <- c("srcuid", "trguid", "mode", "action", "direction","score")
Rels <- all_rels[, c("srcuid", "trguid", "mode", "direction")]
         
# Get all rows with causal relations
Rels <- Rels[Rels$mode \%in\% c("activation", "inhibition","expression"),]
         
# Get causal relations where direction is not specified, 
# and consider reversed direction of causality as a valid 
# causal relation
Bidirectional <- Rels[Rels$direction == 0 , 
                                   c("trguid", "srcuid", "mode", "direction")]
names(Bidirectional) <- c("srcuid", "trguid", "mode", "direction")
Rels <- unique(bind_rows(Rels, Bidirectional))
Rels$direction <- NULL

# Rename activation as increases, inhibition as decreases, 
# expression as regulates
Rels$mode <- sub("activation", "increases", Rels$mode)
Rels$mode <- sub("inhibition", "decreases", Rels$mode)
Rels$mode <- sub("expression", "regulates", Rels$mode)
Rels <- unique(Rels)

# Get a subset of the network: Skip this step if you want the p-values 
# of the scores corresponding to the source nodes computed over the 
# entire network. 
Rels <- Rels[sample(1:nrow(Rels), 40000, replace=FALSE),]
          
# Third, we extract the protein entities from the network, and
# we map them to their respective genes. Note, the entities could
# have been possibly a drug or compound, but we are working with
# this protein interactions network for the purpose of providing
# a nontrivial example.
          
# Get all unique protein ensemble ids in the causal network
allEns <- unique(c(Rels$srcuid, Rels$trguid))
          
# Map ensemble protein ids to entrez gene ids
map <- org.Hs.egENSEMBLPROT2EG
id <- unlist(mget(sub("9606.","",allEns), map, ifnotfound=NA))
id[is.na(id)] <- "-1"
uid <- paste("9606.", names(id), sep="")
          
# Function to map entrez ids to gene symbols
map <- org.Hs.egSYMBOL
symbol <- unlist(mget(id, map, ifnotfound=NA))
symbol[is.na(symbol)] <- "-1"
          
# Create data frame of STRINGdb protein Id, entrez id and gene
# symbol and type of entity
Ents <- data_frame(uid, id, symbol, type="protein")
Ents <- Ents[Ents$uid \%in\% allEns,]

# Remove ensemble ids in entities with duplicated entrez id
Ents <- Ents[!duplicated(Ents$id),]
          
# Add mRNAs to entities
uid <- paste("mRNA_", Ents$uid, sep = "")
mRNAs <- data_frame(uid=uid, id=Ents$id, symbol=Ents$symbol, type="mRNA")
Ents <- bind_rows(Ents, mRNAs)
          
# Get all unique relations
Rels$trguid <- paste("mRNA_", Rels$trguid, sep="")
Rels <- Rels[Rels$srcuid \%in\% Ents$uid & Rels$trguid \%in\% Ents$uid,]
Rels <- unique(Rels)
          
# Leave source proteins which contain at least 10 edges
sufficientRels <- group_by(Rels, srcuid) \%>\% summarise(count=n())
sufficientRels <- sufficientRels \%>\% filter(count > 10)
Rels <- Rels \%>\% filter(srcuid \%in\% sufficientRels$srcuid)
          
# Given new gene expression data, we can compute the scores and p-values
# for all source nodes in the network. BioQCREtoNet is a specialized
# function for this purpose.
          
# Gene expression data
evidence1 <- system.file("extdata", "e2f3_sig.txt", package = "QuaternaryProd")
evidence1 <- read.table(evidence1, sep = "\\t", header = TRUE
                                                  , stringsAsFactors = FALSE)

# Remove duplicated entrez ids in evidence and rename column names appropriately
evidence1 <- evidence1[!duplicated(evidence1$entrez),]
names(evidence1) <- c("entrez", "pvalue", "fc")
          
# Run Quaternary CRE for entire Knowledge base on new evidence
# which computes the statistic for each of the source proteins
CRE_results <- BioQCREtoNet(Rels, evidence1, Ents, is.Logfc = TRUE)

}
\author{
Carl Tony Fakhry, Ping Chen and Kourosh Zarringhalam
}
\references{
Carl Tony Fakhry, Parul Choudhary, Alex Gutteridge, Ben Sidders, Ping Chen, Daniel Ziemek, and
            Kourosh Zarringhalam. Interpreting transcriptional changes using causal graphs: new methods and
            their practical utility on public networks. BMC Bioinformatics, 17:318, 2016. ISSN 1471-2105.
            doi: 10.1186/s12859-016-1181-8.
           
            Franceschini, A (2013). STRING v9.1: protein-protein interaction networks, with increased coverage 
            and integration. In:'Nucleic Acids Res. 2013 Jan;41(Database issue):D808-15. doi: 10.1093/nar/gks1094. 
            Epub 2012 Nov 29'.
}

